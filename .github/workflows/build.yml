name: CI
on:
  push:
    branches:
      - main

jobs:
  windows-build:
    name: Build Bootloader PyInstaller
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [ '3.12' ]

    steps:
      - name: Clone repo
        uses: actions/checkout@v4
        with:
            submodules: "recursive"

      - name: Setup python (x64)
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Setup python (x86)
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x86

      - name: Compile Bootloader (x64)
        run: |
          cd pyinstaller\bootloader
          py -${{ matrix.python-version }}-64 ./waf all

      - name: Compile Bootloader (x86)
        run: |
          cd pyinstaller\bootloader
          py -${{ matrix.python-version }}-32 ./waf all

      - name: Test Bootloader (x64)
        run: |
          py -${{ matrix.python-version }}-64 -m venv bootloader_build_x64
          bootloader_build_x64\Scripts\activate.ps1

          cd pyinstaller
          python -m pip install --upgrade pip
          python -m pip install -r tests/requirements-tools.txt
          python -m pip install -r tests/requirements-libraries.txt
          python -m pip install .
          python -m pytest tests/unit tests/functional

      - name: Test Bootloader (x86)
        run: |
          py -${{ matrix.python-version }}-32 -m venv bootloader_build_x86
          bootloader_build_x86\Scripts\activate.ps1

          cd pyinstaller
          python -m pip install --upgrade pip
          python -m pip install -r tests/requirements-tools.txt
          python -m pip install -r tests/requirements-libraries.txt
          python -m pip install .
          python -m pytest tests/unit tests/functional

      - name: Test mangadex-downloader (x64)
        run: |
          py -${{ matrix.python-version }}-64 -m venv mangadex_dl_build_x64
          mangadex_dl_build_x64\Scripts\activate.ps1

          git clone https://github.com/mansuf/mangadex-downloader.git --depth 1
          cd mangadex-downloader

          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install -r requirements-optional.txt

          cd ..\pyinstaller
          python -m pip install .
          
          cd ..\mangadex-downloader
          python -m PyInstaller "mangadex-dl_x64.spec" --distpath "./dist_x64"

      - name: Test mangadex-downloader (x86)
        run: |
          py -${{ matrix.python-version }}-32 -m venv mangadex_dl_build_x86
          mangadex_dl_build_x86\Scripts\activate.ps1

          git clone https://github.com/mansuf/mangadex-downloader.git --depth 1
          cd mangadex-downloader

          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install -r requirements-optional.txt

          cd ..\pyinstaller
          python -m pip install .
          
          cd ..\mangadex-downloader
          python -m PyInstaller "mangadex-dl_x86.spec" --distpath "./dist_x86"

      - name: Upload artifact (x64)
        uses: actions/upload-artifact@v4
        with:
          name: mangadex-dl_x64
          path: pyinstaller/mangadex-downloader/dist_x64/mangadex-dl/

      - name: Upload artifact (x86)
        uses: actions/upload-artifact@v4
        with:
          name: mangadex-dl_x86
          path: pyinstaller/mangadex-downloader/dist_x86/mangadex-dl/
